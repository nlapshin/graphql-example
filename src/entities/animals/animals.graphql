scalar UUID

enum AnimalType {
  cat
  dog
}

type Animal {
  id: UUID!
  name: String!
  type: AnimalType!
  age: Int!
  legs: Int!
  reviews: [Review]
}

type Review {
  rate: Float!
  comment: String
}

input AnimalInput {
  name: String!, 
  type: AnimalType!, 
  age: Int!, 
  legs: Int!
}


type Query {
  animals: [Animal]
  animalsByType(type: AnimalType!): [Animal]
}

input AnimalInput {
  name: String!, 
  type: AnimalType!, 
  age: Int!, 
  legs: Int!
}


type Mutation {
  addAnimal(name: String!, type: AnimalType!, age: Int!, legs: Int!): Animal
  addAnimalAsInput(animal: AnimalInput!): Animal
}
